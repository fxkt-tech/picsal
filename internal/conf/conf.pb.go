// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v4.22.2
// source: internal/conf/conf.proto

package conf

import (
	v1 "github.com/fxkt-tech/picsal/third_party/yilan/config/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpServer               *v1.HTTP              `protobuf:"bytes,1,opt,name=http_server,json=httpServer,proto3" json:"http_server,omitempty"`
	DbVamCms                 *v1.Database          `protobuf:"bytes,2,opt,name=db_vam_cms,json=dbVamCms,proto3" json:"db_vam_cms,omitempty"`
	Redis                    *v1.Redis             `protobuf:"bytes,3,opt,name=redis,proto3" json:"redis,omitempty"`
	Opensearch               *OpenSearch           `protobuf:"bytes,4,opt,name=opensearch,proto3" json:"opensearch,omitempty"`
	AliOss                   *v1.AliOSS            `protobuf:"bytes,5,opt,name=ali_oss,json=aliOss,proto3" json:"ali_oss,omitempty"`
	Cdn                      *CDN                  `protobuf:"bytes,6,opt,name=cdn,proto3" json:"cdn,omitempty"`
	AliMps                   *AliMps               `protobuf:"bytes,7,opt,name=ali_mps,json=aliMps,proto3" json:"ali_mps,omitempty"`
	Rocketmq                 *RocketMQ             `protobuf:"bytes,8,opt,name=rocketmq,proto3" json:"rocketmq,omitempty"`
	WechatApplet             *WeChatApplet         `protobuf:"bytes,9,opt,name=wechat_applet,json=wechatApplet,proto3" json:"wechat_applet,omitempty"`
	WechatAppletScreenwriter *WeChatApplet         `protobuf:"bytes,10,opt,name=wechat_applet_screenwriter,json=wechatAppletScreenwriter,proto3" json:"wechat_applet_screenwriter,omitempty"`
	WechatAppletAiDraw       *WeChatApplet         `protobuf:"bytes,11,opt,name=wechat_applet_ai_draw,json=wechatAppletAiDraw,proto3" json:"wechat_applet_ai_draw,omitempty"`
	WechatOfficialYyb        *WeChatOfficial       `protobuf:"bytes,12,opt,name=wechat_official_yyb,json=wechatOfficialYyb,proto3" json:"wechat_official_yyb,omitempty"`
	NeteaseVerify            *NetEaseVerify        `protobuf:"bytes,13,opt,name=netease_verify,json=neteaseVerify,proto3" json:"netease_verify,omitempty"`
	UploadBucket             string                `protobuf:"bytes,14,opt,name=upload_bucket,json=uploadBucket,proto3" json:"upload_bucket,omitempty"`
	VideoBucket              string                `protobuf:"bytes,15,opt,name=video_bucket,json=videoBucket,proto3" json:"video_bucket,omitempty"`
	ImageBucket              string                `protobuf:"bytes,16,opt,name=image_bucket,json=imageBucket,proto3" json:"image_bucket,omitempty"`
	MaterialBucket           string                `protobuf:"bytes,17,opt,name=material_bucket,json=materialBucket,proto3" json:"material_bucket,omitempty"`
	OssEndpoint              string                `protobuf:"bytes,18,opt,name=oss_endpoint,json=ossEndpoint,proto3" json:"oss_endpoint,omitempty"`
	MpsEndpoint              string                `protobuf:"bytes,19,opt,name=mps_endpoint,json=mpsEndpoint,proto3" json:"mps_endpoint,omitempty"`
	WorkflowEndpoint         string                `protobuf:"bytes,20,opt,name=workflow_endpoint,json=workflowEndpoint,proto3" json:"workflow_endpoint,omitempty"`
	IdSenderHost             string                `protobuf:"bytes,21,opt,name=id_sender_host,json=idSenderHost,proto3" json:"id_sender_host,omitempty"`
	VideoDownloadHost        string                `protobuf:"bytes,22,opt,name=video_download_host,json=videoDownloadHost,proto3" json:"video_download_host,omitempty"`
	FileDownloadHost         string                `protobuf:"bytes,23,opt,name=file_download_host,json=fileDownloadHost,proto3" json:"file_download_host,omitempty"`
	FrontendHost             string                `protobuf:"bytes,24,opt,name=frontend_host,json=frontendHost,proto3" json:"frontend_host,omitempty"`
	ApiHost                  string                `protobuf:"bytes,25,opt,name=api_host,json=apiHost,proto3" json:"api_host,omitempty"`
	WeaviateHost             string                `protobuf:"bytes,26,opt,name=weaviate_host,json=weaviateHost,proto3" json:"weaviate_host,omitempty"`
	CommonCallbackUrl        string                `protobuf:"bytes,27,opt,name=common_callback_url,json=commonCallbackUrl,proto3" json:"common_callback_url,omitempty"`
	UploadCallbackUrl        string                `protobuf:"bytes,28,opt,name=upload_callback_url,json=uploadCallbackUrl,proto3" json:"upload_callback_url,omitempty"`
	SvgCallbackUrl           string                `protobuf:"bytes,29,opt,name=svg_callback_url,json=svgCallbackUrl,proto3" json:"svg_callback_url,omitempty"`
	BiliOp                   *BilibiliOpenPlatform `protobuf:"bytes,30,opt,name=bili_op,json=biliOp,proto3" json:"bili_op,omitempty"`
	WechatPayment            *WeChatPayment        `protobuf:"bytes,31,opt,name=wechat_payment,json=wechatPayment,proto3" json:"wechat_payment,omitempty"`
	ZfbPayment               *ZFBPayment           `protobuf:"bytes,32,opt,name=zfb_payment,json=zfbPayment,proto3" json:"zfb_payment,omitempty"`
	RemitPayment             *RemitPayment         `protobuf:"bytes,33,opt,name=remit_payment,json=remitPayment,proto3" json:"remit_payment,omitempty"`
	PaymentOptLimit          int32                 `protobuf:"varint,34,opt,name=payment_opt_limit,json=paymentOptLimit,proto3" json:"payment_opt_limit,omitempty"`
	DeliverTopicName         string                `protobuf:"bytes,35,opt,name=deliver_topic_name,json=deliverTopicName,proto3" json:"deliver_topic_name,omitempty"`
	DeliverGroupName         string                `protobuf:"bytes,36,opt,name=deliver_group_name,json=deliverGroupName,proto3" json:"deliver_group_name,omitempty"`
	DeliverExpireTime        int32                 `protobuf:"varint,37,opt,name=deliver_expire_time,json=deliverExpireTime,proto3" json:"deliver_expire_time,omitempty"`
	UserDefaultResource      *UserDefaultResource  `protobuf:"bytes,38,opt,name=user_default_resource,json=userDefaultResource,proto3" json:"user_default_resource,omitempty"`
	ThirdpartLoginPage       *ThirdPartLoginPage   `protobuf:"bytes,39,opt,name=thirdpart_login_page,json=thirdpartLoginPage,proto3" json:"thirdpart_login_page,omitempty"`
	WxBizMessageCrypt        *WXBizMessageCrypt    `protobuf:"bytes,40,opt,name=wx_biz_message_crypt,json=wxBizMessageCrypt,proto3" json:"wx_biz_message_crypt,omitempty"`
	OpenaiAddr               string                `protobuf:"bytes,41,opt,name=openai_addr,json=openaiAddr,proto3" json:"openai_addr,omitempty"`
	AiCustomerTopic          string                `protobuf:"bytes,42,opt,name=ai_customer_topic,json=aiCustomerTopic,proto3" json:"ai_customer_topic,omitempty"`
	GreyFeature              *GreyFeature          `protobuf:"bytes,43,opt,name=grey_feature,json=greyFeature,proto3" json:"grey_feature,omitempty"`
	AliMt                    *AliMt                `protobuf:"bytes,44,opt,name=ali_mt,json=aliMt,proto3" json:"ali_mt,omitempty"`
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetHttpServer() *v1.HTTP {
	if x != nil {
		return x.HttpServer
	}
	return nil
}

func (x *Bootstrap) GetDbVamCms() *v1.Database {
	if x != nil {
		return x.DbVamCms
	}
	return nil
}

func (x *Bootstrap) GetRedis() *v1.Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Bootstrap) GetOpensearch() *OpenSearch {
	if x != nil {
		return x.Opensearch
	}
	return nil
}

func (x *Bootstrap) GetAliOss() *v1.AliOSS {
	if x != nil {
		return x.AliOss
	}
	return nil
}

func (x *Bootstrap) GetCdn() *CDN {
	if x != nil {
		return x.Cdn
	}
	return nil
}

func (x *Bootstrap) GetAliMps() *AliMps {
	if x != nil {
		return x.AliMps
	}
	return nil
}

func (x *Bootstrap) GetRocketmq() *RocketMQ {
	if x != nil {
		return x.Rocketmq
	}
	return nil
}

func (x *Bootstrap) GetWechatApplet() *WeChatApplet {
	if x != nil {
		return x.WechatApplet
	}
	return nil
}

func (x *Bootstrap) GetWechatAppletScreenwriter() *WeChatApplet {
	if x != nil {
		return x.WechatAppletScreenwriter
	}
	return nil
}

func (x *Bootstrap) GetWechatAppletAiDraw() *WeChatApplet {
	if x != nil {
		return x.WechatAppletAiDraw
	}
	return nil
}

func (x *Bootstrap) GetWechatOfficialYyb() *WeChatOfficial {
	if x != nil {
		return x.WechatOfficialYyb
	}
	return nil
}

func (x *Bootstrap) GetNeteaseVerify() *NetEaseVerify {
	if x != nil {
		return x.NeteaseVerify
	}
	return nil
}

func (x *Bootstrap) GetUploadBucket() string {
	if x != nil {
		return x.UploadBucket
	}
	return ""
}

func (x *Bootstrap) GetVideoBucket() string {
	if x != nil {
		return x.VideoBucket
	}
	return ""
}

func (x *Bootstrap) GetImageBucket() string {
	if x != nil {
		return x.ImageBucket
	}
	return ""
}

func (x *Bootstrap) GetMaterialBucket() string {
	if x != nil {
		return x.MaterialBucket
	}
	return ""
}

func (x *Bootstrap) GetOssEndpoint() string {
	if x != nil {
		return x.OssEndpoint
	}
	return ""
}

func (x *Bootstrap) GetMpsEndpoint() string {
	if x != nil {
		return x.MpsEndpoint
	}
	return ""
}

func (x *Bootstrap) GetWorkflowEndpoint() string {
	if x != nil {
		return x.WorkflowEndpoint
	}
	return ""
}

func (x *Bootstrap) GetIdSenderHost() string {
	if x != nil {
		return x.IdSenderHost
	}
	return ""
}

func (x *Bootstrap) GetVideoDownloadHost() string {
	if x != nil {
		return x.VideoDownloadHost
	}
	return ""
}

func (x *Bootstrap) GetFileDownloadHost() string {
	if x != nil {
		return x.FileDownloadHost
	}
	return ""
}

func (x *Bootstrap) GetFrontendHost() string {
	if x != nil {
		return x.FrontendHost
	}
	return ""
}

func (x *Bootstrap) GetApiHost() string {
	if x != nil {
		return x.ApiHost
	}
	return ""
}

func (x *Bootstrap) GetWeaviateHost() string {
	if x != nil {
		return x.WeaviateHost
	}
	return ""
}

func (x *Bootstrap) GetCommonCallbackUrl() string {
	if x != nil {
		return x.CommonCallbackUrl
	}
	return ""
}

func (x *Bootstrap) GetUploadCallbackUrl() string {
	if x != nil {
		return x.UploadCallbackUrl
	}
	return ""
}

func (x *Bootstrap) GetSvgCallbackUrl() string {
	if x != nil {
		return x.SvgCallbackUrl
	}
	return ""
}

func (x *Bootstrap) GetBiliOp() *BilibiliOpenPlatform {
	if x != nil {
		return x.BiliOp
	}
	return nil
}

func (x *Bootstrap) GetWechatPayment() *WeChatPayment {
	if x != nil {
		return x.WechatPayment
	}
	return nil
}

func (x *Bootstrap) GetZfbPayment() *ZFBPayment {
	if x != nil {
		return x.ZfbPayment
	}
	return nil
}

func (x *Bootstrap) GetRemitPayment() *RemitPayment {
	if x != nil {
		return x.RemitPayment
	}
	return nil
}

func (x *Bootstrap) GetPaymentOptLimit() int32 {
	if x != nil {
		return x.PaymentOptLimit
	}
	return 0
}

func (x *Bootstrap) GetDeliverTopicName() string {
	if x != nil {
		return x.DeliverTopicName
	}
	return ""
}

func (x *Bootstrap) GetDeliverGroupName() string {
	if x != nil {
		return x.DeliverGroupName
	}
	return ""
}

func (x *Bootstrap) GetDeliverExpireTime() int32 {
	if x != nil {
		return x.DeliverExpireTime
	}
	return 0
}

func (x *Bootstrap) GetUserDefaultResource() *UserDefaultResource {
	if x != nil {
		return x.UserDefaultResource
	}
	return nil
}

func (x *Bootstrap) GetThirdpartLoginPage() *ThirdPartLoginPage {
	if x != nil {
		return x.ThirdpartLoginPage
	}
	return nil
}

func (x *Bootstrap) GetWxBizMessageCrypt() *WXBizMessageCrypt {
	if x != nil {
		return x.WxBizMessageCrypt
	}
	return nil
}

func (x *Bootstrap) GetOpenaiAddr() string {
	if x != nil {
		return x.OpenaiAddr
	}
	return ""
}

func (x *Bootstrap) GetAiCustomerTopic() string {
	if x != nil {
		return x.AiCustomerTopic
	}
	return ""
}

func (x *Bootstrap) GetGreyFeature() *GreyFeature {
	if x != nil {
		return x.GreyFeature
	}
	return nil
}

func (x *Bootstrap) GetAliMt() *AliMt {
	if x != nil {
		return x.AliMt
	}
	return nil
}

type GreyFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AiDraw int32 `protobuf:"varint,1,opt,name=ai_draw,json=aiDraw,proto3" json:"ai_draw,omitempty"`
}

func (x *GreyFeature) Reset() {
	*x = GreyFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GreyFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreyFeature) ProtoMessage() {}

func (x *GreyFeature) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreyFeature.ProtoReflect.Descriptor instead.
func (*GreyFeature) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *GreyFeature) GetAiDraw() int32 {
	if x != nil {
		return x.AiDraw
	}
	return 0
}

type OpenSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint    string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKey   string `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	Secret      string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	AppVideo    string `protobuf:"bytes,4,opt,name=app_video,json=appVideo,proto3" json:"app_video,omitempty"`
	AppMaterial string `protobuf:"bytes,5,opt,name=app_material,json=appMaterial,proto3" json:"app_material,omitempty"`
}

func (x *OpenSearch) Reset() {
	*x = OpenSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearch) ProtoMessage() {}

func (x *OpenSearch) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearch.ProtoReflect.Descriptor instead.
func (*OpenSearch) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *OpenSearch) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *OpenSearch) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *OpenSearch) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *OpenSearch) GetAppVideo() string {
	if x != nil {
		return x.AppVideo
	}
	return ""
}

func (x *OpenSearch) GetAppMaterial() string {
	if x != nil {
		return x.AppMaterial
	}
	return ""
}

type CDN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthKey              string `protobuf:"bytes,1,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	VideoHost            string `protobuf:"bytes,2,opt,name=video_host,json=videoHost,proto3" json:"video_host,omitempty"`
	ImageHost            string `protobuf:"bytes,3,opt,name=image_host,json=imageHost,proto3" json:"image_host,omitempty"`
	MaterialHost         string `protobuf:"bytes,4,opt,name=material_host,json=materialHost,proto3" json:"material_host,omitempty"`
	ImageDownloadHost    string `protobuf:"bytes,5,opt,name=image_download_host,json=imageDownloadHost,proto3" json:"image_download_host,omitempty"`
	VideoDownloadHost    string `protobuf:"bytes,6,opt,name=video_download_host,json=videoDownloadHost,proto3" json:"video_download_host,omitempty"`
	FileDownloadHost     string `protobuf:"bytes,7,opt,name=file_download_host,json=fileDownloadHost,proto3" json:"file_download_host,omitempty"`
	MaterialDownloadHost string `protobuf:"bytes,8,opt,name=material_download_host,json=materialDownloadHost,proto3" json:"material_download_host,omitempty"`
}

func (x *CDN) Reset() {
	*x = CDN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDN) ProtoMessage() {}

func (x *CDN) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDN.ProtoReflect.Descriptor instead.
func (*CDN) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *CDN) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

func (x *CDN) GetVideoHost() string {
	if x != nil {
		return x.VideoHost
	}
	return ""
}

func (x *CDN) GetImageHost() string {
	if x != nil {
		return x.ImageHost
	}
	return ""
}

func (x *CDN) GetMaterialHost() string {
	if x != nil {
		return x.MaterialHost
	}
	return ""
}

func (x *CDN) GetImageDownloadHost() string {
	if x != nil {
		return x.ImageDownloadHost
	}
	return ""
}

func (x *CDN) GetVideoDownloadHost() string {
	if x != nil {
		return x.VideoDownloadHost
	}
	return ""
}

func (x *CDN) GetFileDownloadHost() string {
	if x != nil {
		return x.FileDownloadHost
	}
	return ""
}

func (x *CDN) GetMaterialDownloadHost() string {
	if x != nil {
		return x.MaterialDownloadHost
	}
	return ""
}

type NetEaseVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId  string `protobuf:"bytes,1,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	CaptchaId string `protobuf:"bytes,3,opt,name=captcha_id,json=captchaId,proto3" json:"captcha_id,omitempty"`
}

func (x *NetEaseVerify) Reset() {
	*x = NetEaseVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetEaseVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetEaseVerify) ProtoMessage() {}

func (x *NetEaseVerify) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetEaseVerify.ProtoReflect.Descriptor instead.
func (*NetEaseVerify) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *NetEaseVerify) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *NetEaseVerify) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *NetEaseVerify) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

type AliMps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccesskeyId     string `protobuf:"bytes,1,opt,name=accesskey_id,json=accesskeyId,proto3" json:"accesskey_id,omitempty"`
	AccesskeySecret string `protobuf:"bytes,2,opt,name=accesskey_secret,json=accesskeySecret,proto3" json:"accesskey_secret,omitempty"`
	RegionId        string `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *AliMps) Reset() {
	*x = AliMps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliMps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliMps) ProtoMessage() {}

func (x *AliMps) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliMps.ProtoReflect.Descriptor instead.
func (*AliMps) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *AliMps) GetAccesskeyId() string {
	if x != nil {
		return x.AccesskeyId
	}
	return ""
}

func (x *AliMps) GetAccesskeySecret() string {
	if x != nil {
		return x.AccesskeySecret
	}
	return ""
}

func (x *AliMps) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type AliMt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccesskeyId     string `protobuf:"bytes,1,opt,name=accesskey_id,json=accesskeyId,proto3" json:"accesskey_id,omitempty"`
	AccesskeySecret string `protobuf:"bytes,2,opt,name=accesskey_secret,json=accesskeySecret,proto3" json:"accesskey_secret,omitempty"`
	RegionId        string `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *AliMt) Reset() {
	*x = AliMt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliMt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliMt) ProtoMessage() {}

func (x *AliMt) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliMt.ProtoReflect.Descriptor instead.
func (*AliMt) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *AliMt) GetAccesskeyId() string {
	if x != nil {
		return x.AccesskeyId
	}
	return ""
}

func (x *AliMt) GetAccesskeySecret() string {
	if x != nil {
		return x.AccesskeySecret
	}
	return ""
}

func (x *AliMt) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type RocketMQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccesskeyId     string `protobuf:"bytes,2,opt,name=accesskey_id,json=accesskeyId,proto3" json:"accesskey_id,omitempty"`
	AccesskeySecret string `protobuf:"bytes,3,opt,name=accesskey_secret,json=accesskeySecret,proto3" json:"accesskey_secret,omitempty"`
	InstanceId      string `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	TopicName       string `protobuf:"bytes,5,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	GroupName       string `protobuf:"bytes,6,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *RocketMQ) Reset() {
	*x = RocketMQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RocketMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RocketMQ) ProtoMessage() {}

func (x *RocketMQ) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RocketMQ.ProtoReflect.Descriptor instead.
func (*RocketMQ) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *RocketMQ) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *RocketMQ) GetAccesskeyId() string {
	if x != nil {
		return x.AccesskeyId
	}
	return ""
}

func (x *RocketMQ) GetAccesskeySecret() string {
	if x != nil {
		return x.AccesskeySecret
	}
	return ""
}

func (x *RocketMQ) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RocketMQ) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *RocketMQ) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type WeChatApplet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *WeChatApplet) Reset() {
	*x = WeChatApplet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeChatApplet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeChatApplet) ProtoMessage() {}

func (x *WeChatApplet) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeChatApplet.ProtoReflect.Descriptor instead.
func (*WeChatApplet) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *WeChatApplet) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WeChatApplet) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type BilibiliOpenPlatform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *BilibiliOpenPlatform) Reset() {
	*x = BilibiliOpenPlatform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BilibiliOpenPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BilibiliOpenPlatform) ProtoMessage() {}

func (x *BilibiliOpenPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BilibiliOpenPlatform.ProtoReflect.Descriptor instead.
func (*BilibiliOpenPlatform) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *BilibiliOpenPlatform) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *BilibiliOpenPlatform) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type WeChatPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId            string `protobuf:"bytes,1,opt,name=mch_id,json=mchId,proto3" json:"mch_id,omitempty"`
	MchCertificateNo string `protobuf:"bytes,2,opt,name=mch_certificate_no,json=mchCertificateNo,proto3" json:"mch_certificate_no,omitempty"`
	MchApiV3Key      string `protobuf:"bytes,3,opt,name=mch_api_v3_key,json=mchApiV3Key,proto3" json:"mch_api_v3_key,omitempty"`
	MchPrivateKey    string `protobuf:"bytes,4,opt,name=mch_private_key,json=mchPrivateKey,proto3" json:"mch_private_key,omitempty"`
	AppId            string `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	CallbackUrl      string `protobuf:"bytes,6,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *WeChatPayment) Reset() {
	*x = WeChatPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeChatPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeChatPayment) ProtoMessage() {}

func (x *WeChatPayment) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeChatPayment.ProtoReflect.Descriptor instead.
func (*WeChatPayment) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{10}
}

func (x *WeChatPayment) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *WeChatPayment) GetMchCertificateNo() string {
	if x != nil {
		return x.MchCertificateNo
	}
	return ""
}

func (x *WeChatPayment) GetMchApiV3Key() string {
	if x != nil {
		return x.MchApiV3Key
	}
	return ""
}

func (x *WeChatPayment) GetMchPrivateKey() string {
	if x != nil {
		return x.MchPrivateKey
	}
	return ""
}

func (x *WeChatPayment) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WeChatPayment) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

type ZFBPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId            string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	MchPrivateKey    string `protobuf:"bytes,2,opt,name=mch_private_key,json=mchPrivateKey,proto3" json:"mch_private_key,omitempty"`
	MchPublicCert    string `protobuf:"bytes,3,opt,name=mch_public_cert,json=mchPublicCert,proto3" json:"mch_public_cert,omitempty"`
	AlipayPublicCert string `protobuf:"bytes,4,opt,name=alipay_public_cert,json=alipayPublicCert,proto3" json:"alipay_public_cert,omitempty"`
	AlipayRootCert   string `protobuf:"bytes,5,opt,name=alipay_root_cert,json=alipayRootCert,proto3" json:"alipay_root_cert,omitempty"`
	CallbackUrl      string `protobuf:"bytes,6,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *ZFBPayment) Reset() {
	*x = ZFBPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZFBPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZFBPayment) ProtoMessage() {}

func (x *ZFBPayment) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZFBPayment.ProtoReflect.Descriptor instead.
func (*ZFBPayment) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{11}
}

func (x *ZFBPayment) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ZFBPayment) GetMchPrivateKey() string {
	if x != nil {
		return x.MchPrivateKey
	}
	return ""
}

func (x *ZFBPayment) GetMchPublicCert() string {
	if x != nil {
		return x.MchPublicCert
	}
	return ""
}

func (x *ZFBPayment) GetAlipayPublicCert() string {
	if x != nil {
		return x.AlipayPublicCert
	}
	return ""
}

func (x *ZFBPayment) GetAlipayRootCert() string {
	if x != nil {
		return x.AlipayRootCert
	}
	return ""
}

func (x *ZFBPayment) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

type RemitPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	BankName    string `protobuf:"bytes,2,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	Account     string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	BankUnionId string `protobuf:"bytes,4,opt,name=bank_union_id,json=bankUnionId,proto3" json:"bank_union_id,omitempty"`
}

func (x *RemitPayment) Reset() {
	*x = RemitPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemitPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemitPayment) ProtoMessage() {}

func (x *RemitPayment) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemitPayment.ProtoReflect.Descriptor instead.
func (*RemitPayment) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{12}
}

func (x *RemitPayment) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *RemitPayment) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *RemitPayment) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RemitPayment) GetBankUnionId() string {
	if x != nil {
		return x.BankUnionId
	}
	return ""
}

type UserDefaultResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*UserDefaultResourceResourceItem `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *UserDefaultResource) Reset() {
	*x = UserDefaultResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDefaultResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefaultResource) ProtoMessage() {}

func (x *UserDefaultResource) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefaultResource.ProtoReflect.Descriptor instead.
func (*UserDefaultResource) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{13}
}

func (x *UserDefaultResource) GetResources() []*UserDefaultResourceResourceItem {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ThirdPartLoginPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WxMiniPage string `protobuf:"bytes,1,opt,name=wx_mini_page,json=wxMiniPage,proto3" json:"wx_mini_page,omitempty"`
}

func (x *ThirdPartLoginPage) Reset() {
	*x = ThirdPartLoginPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdPartLoginPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdPartLoginPage) ProtoMessage() {}

func (x *ThirdPartLoginPage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdPartLoginPage.ProtoReflect.Descriptor instead.
func (*ThirdPartLoginPage) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{14}
}

func (x *ThirdPartLoginPage) GetWxMiniPage() string {
	if x != nil {
		return x.WxMiniPage
	}
	return ""
}

type WXBizMessageCrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token          string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	EncodingAeskey string `protobuf:"bytes,2,opt,name=encoding_aeskey,json=encodingAeskey,proto3" json:"encoding_aeskey,omitempty"`
	ReceiverId     string `protobuf:"bytes,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	CorpSecret     string `protobuf:"bytes,4,opt,name=corp_secret,json=corpSecret,proto3" json:"corp_secret,omitempty"`
	IsOpen         bool   `protobuf:"varint,5,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
}

func (x *WXBizMessageCrypt) Reset() {
	*x = WXBizMessageCrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WXBizMessageCrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WXBizMessageCrypt) ProtoMessage() {}

func (x *WXBizMessageCrypt) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WXBizMessageCrypt.ProtoReflect.Descriptor instead.
func (*WXBizMessageCrypt) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{15}
}

func (x *WXBizMessageCrypt) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WXBizMessageCrypt) GetEncodingAeskey() string {
	if x != nil {
		return x.EncodingAeskey
	}
	return ""
}

func (x *WXBizMessageCrypt) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *WXBizMessageCrypt) GetCorpSecret() string {
	if x != nil {
		return x.CorpSecret
	}
	return ""
}

func (x *WXBizMessageCrypt) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

type WeChatOfficial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId          string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Secret         string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Token          string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	EncodingAeskey string `protobuf:"bytes,4,opt,name=encoding_aeskey,json=encodingAeskey,proto3" json:"encoding_aeskey,omitempty"`
}

func (x *WeChatOfficial) Reset() {
	*x = WeChatOfficial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeChatOfficial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeChatOfficial) ProtoMessage() {}

func (x *WeChatOfficial) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeChatOfficial.ProtoReflect.Descriptor instead.
func (*WeChatOfficial) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{16}
}

func (x *WeChatOfficial) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WeChatOfficial) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *WeChatOfficial) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WeChatOfficial) GetEncodingAeskey() string {
	if x != nil {
		return x.EncodingAeskey
	}
	return ""
}

type UserDefaultResourceSpriteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XLen        int32    `protobuf:"varint,1,opt,name=x_len,json=xLen,proto3" json:"x_len,omitempty"`
	YLen        int32    `protobuf:"varint,2,opt,name=y_len,json=yLen,proto3" json:"y_len,omitempty"`
	ThumbWidth  int32    `protobuf:"varint,3,opt,name=thumb_width,json=thumbWidth,proto3" json:"thumb_width,omitempty"`
	ThumbHeight int32    `protobuf:"varint,4,opt,name=thumb_height,json=thumbHeight,proto3" json:"thumb_height,omitempty"`
	Interval    int32    `protobuf:"varint,5,opt,name=interval,proto3" json:"interval,omitempty"`
	SpriteList  []string `protobuf:"bytes,6,rep,name=sprite_list,json=spriteList,proto3" json:"sprite_list,omitempty"`
}

func (x *UserDefaultResourceSpriteInfo) Reset() {
	*x = UserDefaultResourceSpriteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDefaultResourceSpriteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefaultResourceSpriteInfo) ProtoMessage() {}

func (x *UserDefaultResourceSpriteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefaultResourceSpriteInfo.ProtoReflect.Descriptor instead.
func (*UserDefaultResourceSpriteInfo) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UserDefaultResourceSpriteInfo) GetXLen() int32 {
	if x != nil {
		return x.XLen
	}
	return 0
}

func (x *UserDefaultResourceSpriteInfo) GetYLen() int32 {
	if x != nil {
		return x.YLen
	}
	return 0
}

func (x *UserDefaultResourceSpriteInfo) GetThumbWidth() int32 {
	if x != nil {
		return x.ThumbWidth
	}
	return 0
}

func (x *UserDefaultResourceSpriteInfo) GetThumbHeight() int32 {
	if x != nil {
		return x.ThumbHeight
	}
	return 0
}

func (x *UserDefaultResourceSpriteInfo) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *UserDefaultResourceSpriteInfo) GetSpriteList() []string {
	if x != nil {
		return x.SpriteList
	}
	return nil
}

type UserDefaultResourceResourceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string                         `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	NeedAddProject bool                           `protobuf:"varint,3,opt,name=need_add_project,json=needAddProject,proto3" json:"need_add_project,omitempty"`
	Duration       int32                          `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Cover          string                         `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	FirstFrame     string                         `protobuf:"bytes,6,opt,name=first_frame,json=firstFrame,proto3" json:"first_frame,omitempty"`
	OriginMedia    string                         `protobuf:"bytes,7,opt,name=origin_media,json=originMedia,proto3" json:"origin_media,omitempty"`
	ProxyMedia     string                         `protobuf:"bytes,8,opt,name=proxy_media,json=proxyMedia,proto3" json:"proxy_media,omitempty"`
	Type           int32                          `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Source         int32                          `protobuf:"varint,10,opt,name=source,proto3" json:"source,omitempty"`
	ExtType        int32                          `protobuf:"varint,11,opt,name=ext_type,json=extType,proto3" json:"ext_type,omitempty"`
	Sprite         *UserDefaultResourceSpriteInfo `protobuf:"bytes,12,opt,name=sprite,proto3" json:"sprite,omitempty"`
}

func (x *UserDefaultResourceResourceItem) Reset() {
	*x = UserDefaultResourceResourceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDefaultResourceResourceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefaultResourceResourceItem) ProtoMessage() {}

func (x *UserDefaultResourceResourceItem) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefaultResourceResourceItem.ProtoReflect.Descriptor instead.
func (*UserDefaultResourceResourceItem) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{13, 1}
}

func (x *UserDefaultResourceResourceItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UserDefaultResourceResourceItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserDefaultResourceResourceItem) GetNeedAddProject() bool {
	if x != nil {
		return x.NeedAddProject
	}
	return false
}

func (x *UserDefaultResourceResourceItem) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UserDefaultResourceResourceItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UserDefaultResourceResourceItem) GetFirstFrame() string {
	if x != nil {
		return x.FirstFrame
	}
	return ""
}

func (x *UserDefaultResourceResourceItem) GetOriginMedia() string {
	if x != nil {
		return x.OriginMedia
	}
	return ""
}

func (x *UserDefaultResourceResourceItem) GetProxyMedia() string {
	if x != nil {
		return x.ProxyMedia
	}
	return ""
}

func (x *UserDefaultResourceResourceItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserDefaultResourceResourceItem) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *UserDefaultResourceResourceItem) GetExtType() int32 {
	if x != nil {
		return x.ExtType
	}
	return 0
}

func (x *UserDefaultResourceResourceItem) GetSprite() *UserDefaultResourceSpriteInfo {
	if x != nil {
		return x.Sprite
	}
	return nil
}

var File_internal_conf_conf_proto protoreflect.FileDescriptor

var file_internal_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x6d, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x1a, 0x1c, 0x79, 0x69,
	0x6c, 0x61, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x12, 0x0a, 0x09, 0x42,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x79, 0x69, 0x6c, 0x61, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x54, 0x54, 0x50, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x0a, 0x64, 0x62, 0x5f, 0x76, 0x61, 0x6d, 0x5f, 0x63, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79, 0x69, 0x6c, 0x61, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x08, 0x64, 0x62, 0x56, 0x61, 0x6d, 0x43, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x69, 0x6c, 0x61, 0x6e,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x5f, 0x6f, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x69, 0x6c, 0x61, 0x6e, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x69, 0x4f, 0x53, 0x53, 0x52,
	0x06, 0x61, 0x6c, 0x69, 0x4f, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x03, 0x63, 0x64, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x44, 0x4e, 0x52, 0x03, 0x63, 0x64, 0x6e,
	0x12, 0x31, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x5f, 0x6d, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x6c, 0x69, 0x4d, 0x70, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x69,
	0x4d, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x6d, 0x71, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d,
	0x51, 0x52, 0x08, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x6d, 0x71, 0x12, 0x43, 0x0a, 0x0d, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x65, 0x74, 0x52, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74,
	0x12, 0x5c, 0x0a, 0x1a, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x74, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x65, 0x74, 0x52, 0x18, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x51,
	0x0a, 0x15, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x5f,
	0x61, 0x69, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x52, 0x12, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x41, 0x69, 0x44, 0x72, 0x61,
	0x77, 0x12, 0x50, 0x0a, 0x13, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x79, 0x79, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x11, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x59, 0x79, 0x62, 0x12, 0x46, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4e,
	0x65, 0x74, 0x45, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x0d, 0x6e, 0x65,
	0x74, 0x65, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x73, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x73, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x70, 0x73, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x69, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x69, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65, 0x61, 0x76, 0x69, 0x61,
	0x74, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x65, 0x61, 0x76, 0x69, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x76, 0x67, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x76, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x3f, 0x0a, 0x07, 0x62, 0x69, 0x6c, 0x69, 0x5f, 0x6f, 0x70,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x42, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x06,
	0x62, 0x69, 0x6c, 0x69, 0x4f, 0x70, 0x12, 0x46, 0x0a, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d,
	0x0a, 0x0b, 0x7a, 0x66, 0x62, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x5a, 0x46, 0x42, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x7a, 0x66, 0x62, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a,
	0x0d, 0x72, 0x65, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x70,
	0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x15, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x14, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x12, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a,
	0x14, 0x77, 0x78, 0x5f, 0x62, 0x69, 0x7a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x57,
	0x58, 0x42, 0x69, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x52, 0x11, 0x77, 0x78, 0x42, 0x69, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x69, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x40, 0x0a, 0x0c, 0x67, 0x72, 0x65, 0x79, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x47, 0x72, 0x65, 0x79, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x67, 0x72, 0x65, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x6c, 0x69, 0x5f, 0x6d, 0x74, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x6c, 0x69, 0x4d, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x4d, 0x74, 0x22, 0x26, 0x0a, 0x0b, 0x47, 0x72, 0x65, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x69, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x69, 0x44, 0x72, 0x61, 0x77, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xc7, 0x02, 0x0a,
	0x03, 0x43, 0x44, 0x4e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x66, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x16, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x45, 0x61, 0x73,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x49, 0x64, 0x22, 0x73, 0x0a, 0x06, 0x41, 0x6c, 0x69, 0x4d, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x4d, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x08,
	0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x51, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3d, 0x0a, 0x0c, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x65,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x58, 0x0a, 0x14, 0x42, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0d, 0x57,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x63, 0x68, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6d, 0x63, 0x68, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x12, 0x23, 0x0a, 0x0e, 0x6d, 0x63, 0x68, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x63, 0x68, 0x41, 0x70,
	0x69, 0x56, 0x33, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x63, 0x68, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x63, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0xee, 0x01, 0x0a, 0x0a, 0x5a, 0x46, 0x42,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x6d, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x63, 0x68, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x63, 0x68, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x63, 0x68, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x65, 0x72, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x63, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x65, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x52, 0x6f,
	0x6f, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e,
	0x6b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xbc, 0x05, 0x0a, 0x13, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x1a, 0xb7, 0x01, 0x0a, 0x0a, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x13, 0x0a, 0x05, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x4c, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x70, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x98, 0x03, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x64,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x6e, 0x65, 0x65, 0x64, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a,
	0x06, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x77, 0x78, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x78, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x67, 0x65, 0x22,
	0xad, 0x01, 0x0a, 0x11, 0x57, 0x58, 0x42, 0x69, 0x7a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x65,
	0x73, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x72, 0x70,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x22,
	0x7e, 0x0a, 0x0e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x42,
	0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x2e, 0x6d, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x2e,
	0x63, 0x6e, 0x2f, 0x43, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2f, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_conf_conf_proto_rawDescOnce sync.Once
	file_internal_conf_conf_proto_rawDescData = file_internal_conf_conf_proto_rawDesc
)

func file_internal_conf_conf_proto_rawDescGZIP() []byte {
	file_internal_conf_conf_proto_rawDescOnce.Do(func() {
		file_internal_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_conf_conf_proto_rawDescData)
	})
	return file_internal_conf_conf_proto_rawDescData
}

var file_internal_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_internal_conf_conf_proto_goTypes = []interface{}{
	(*Bootstrap)(nil),                       // 0: cms.service.conf.Bootstrap
	(*GreyFeature)(nil),                     // 1: cms.service.conf.GreyFeature
	(*OpenSearch)(nil),                      // 2: cms.service.conf.OpenSearch
	(*CDN)(nil),                             // 3: cms.service.conf.CDN
	(*NetEaseVerify)(nil),                   // 4: cms.service.conf.NetEaseVerify
	(*AliMps)(nil),                          // 5: cms.service.conf.AliMps
	(*AliMt)(nil),                           // 6: cms.service.conf.AliMt
	(*RocketMQ)(nil),                        // 7: cms.service.conf.RocketMQ
	(*WeChatApplet)(nil),                    // 8: cms.service.conf.WeChatApplet
	(*BilibiliOpenPlatform)(nil),            // 9: cms.service.conf.BilibiliOpenPlatform
	(*WeChatPayment)(nil),                   // 10: cms.service.conf.WeChatPayment
	(*ZFBPayment)(nil),                      // 11: cms.service.conf.ZFBPayment
	(*RemitPayment)(nil),                    // 12: cms.service.conf.RemitPayment
	(*UserDefaultResource)(nil),             // 13: cms.service.conf.UserDefaultResource
	(*ThirdPartLoginPage)(nil),              // 14: cms.service.conf.ThirdPartLoginPage
	(*WXBizMessageCrypt)(nil),               // 15: cms.service.conf.WXBizMessageCrypt
	(*WeChatOfficial)(nil),                  // 16: cms.service.conf.WeChatOfficial
	(*UserDefaultResourceSpriteInfo)(nil),   // 17: cms.service.conf.UserDefaultResource.spriteInfo
	(*UserDefaultResourceResourceItem)(nil), // 18: cms.service.conf.UserDefaultResource.resourceItem
	(*v1.HTTP)(nil),                         // 19: yilan.config.v1.HTTP
	(*v1.Database)(nil),                     // 20: yilan.config.v1.Database
	(*v1.Redis)(nil),                        // 21: yilan.config.v1.Redis
	(*v1.AliOSS)(nil),                       // 22: yilan.config.v1.AliOSS
}
var file_internal_conf_conf_proto_depIdxs = []int32{
	19, // 0: cms.service.conf.Bootstrap.http_server:type_name -> yilan.config.v1.HTTP
	20, // 1: cms.service.conf.Bootstrap.db_vam_cms:type_name -> yilan.config.v1.Database
	21, // 2: cms.service.conf.Bootstrap.redis:type_name -> yilan.config.v1.Redis
	2,  // 3: cms.service.conf.Bootstrap.opensearch:type_name -> cms.service.conf.OpenSearch
	22, // 4: cms.service.conf.Bootstrap.ali_oss:type_name -> yilan.config.v1.AliOSS
	3,  // 5: cms.service.conf.Bootstrap.cdn:type_name -> cms.service.conf.CDN
	5,  // 6: cms.service.conf.Bootstrap.ali_mps:type_name -> cms.service.conf.AliMps
	7,  // 7: cms.service.conf.Bootstrap.rocketmq:type_name -> cms.service.conf.RocketMQ
	8,  // 8: cms.service.conf.Bootstrap.wechat_applet:type_name -> cms.service.conf.WeChatApplet
	8,  // 9: cms.service.conf.Bootstrap.wechat_applet_screenwriter:type_name -> cms.service.conf.WeChatApplet
	8,  // 10: cms.service.conf.Bootstrap.wechat_applet_ai_draw:type_name -> cms.service.conf.WeChatApplet
	16, // 11: cms.service.conf.Bootstrap.wechat_official_yyb:type_name -> cms.service.conf.WeChatOfficial
	4,  // 12: cms.service.conf.Bootstrap.netease_verify:type_name -> cms.service.conf.NetEaseVerify
	9,  // 13: cms.service.conf.Bootstrap.bili_op:type_name -> cms.service.conf.BilibiliOpenPlatform
	10, // 14: cms.service.conf.Bootstrap.wechat_payment:type_name -> cms.service.conf.WeChatPayment
	11, // 15: cms.service.conf.Bootstrap.zfb_payment:type_name -> cms.service.conf.ZFBPayment
	12, // 16: cms.service.conf.Bootstrap.remit_payment:type_name -> cms.service.conf.RemitPayment
	13, // 17: cms.service.conf.Bootstrap.user_default_resource:type_name -> cms.service.conf.UserDefaultResource
	14, // 18: cms.service.conf.Bootstrap.thirdpart_login_page:type_name -> cms.service.conf.ThirdPartLoginPage
	15, // 19: cms.service.conf.Bootstrap.wx_biz_message_crypt:type_name -> cms.service.conf.WXBizMessageCrypt
	1,  // 20: cms.service.conf.Bootstrap.grey_feature:type_name -> cms.service.conf.GreyFeature
	6,  // 21: cms.service.conf.Bootstrap.ali_mt:type_name -> cms.service.conf.AliMt
	18, // 22: cms.service.conf.UserDefaultResource.resources:type_name -> cms.service.conf.UserDefaultResource.resourceItem
	17, // 23: cms.service.conf.UserDefaultResource.resourceItem.sprite:type_name -> cms.service.conf.UserDefaultResource.spriteInfo
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_internal_conf_conf_proto_init() }
func file_internal_conf_conf_proto_init() {
	if File_internal_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_conf_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bootstrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GreyFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetEaseVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliMps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliMt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RocketMQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeChatApplet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BilibiliOpenPlatform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeChatPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZFBPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemitPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDefaultResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdPartLoginPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WXBizMessageCrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeChatOfficial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDefaultResourceSpriteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDefaultResourceResourceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_conf_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_conf_conf_proto_goTypes,
		DependencyIndexes: file_internal_conf_conf_proto_depIdxs,
		MessageInfos:      file_internal_conf_conf_proto_msgTypes,
	}.Build()
	File_internal_conf_conf_proto = out.File
	file_internal_conf_conf_proto_rawDesc = nil
	file_internal_conf_conf_proto_goTypes = nil
	file_internal_conf_conf_proto_depIdxs = nil
}
