// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/fxkt-tech/picsal/internal/biz"
	"github.com/fxkt-tech/picsal/internal/conf"
	"github.com/fxkt-tech/picsal/internal/data"
	"github.com/fxkt-tech/picsal/internal/server"
	"github.com/fxkt-tech/picsal/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(bootstrap *conf.Bootstrap, logger log.Logger) (*kratos.App, func(), error) {
	dataData, cleanup, err := data.NewData(bootstrap, logger)
	if err != nil {
		return nil, nil, err
	}
	imageRepo := data.NewAIRepo(dataData, logger)
	imageUsecase := biz.NewImageUsecase(imageRepo, logger)
	imageService := service.NewImageService(imageUsecase, logger)
	httpServer, err := server.NewHTTPServer(bootstrap, dataData, imageService, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	app := newApp(logger, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
